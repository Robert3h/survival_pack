
<html lang="zh-Hant">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>家庭防災包規劃網頁</title>
    
    <!-- Google Fonts: Noto Sans TC for Traditional Chinese -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Noto+Sans+TC:wght@400;700;900&display=swap" rel="stylesheet">
    
    <!-- Chart.js for Pie Chart -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    
    <!-- Font Awesome for Icons -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">

    <style>
        /* CSS Styles */
        :root {
            --color-primary: #0056b3;
            --color-secondary: #6a0dad;
            --color-dark-grey: #4A4A4A;
            --color-light-grey: #f8f9fa;
            --color-unchecked: #e74c3c;
            --color-checked: #2ecc71;
            --gradient-hero: linear-gradient(135deg, #a8c0ff, #c9a8ff);
            --bg-progress: #eaf2ff;
            --bg-calculator: #f3eaff;
        }

        body {
            font-family: 'Noto Sans TC', sans-serif;
            margin: 0;
            padding: 0;
            color: #333;
            line-height: 1.8;
            background-color: var(--color-light-grey);
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px 40px;
            text-align: center;
        }

        /* Headings and Text */
        h1, h2, h3, h4 {
            margin: 0.5em 0;
        }

        h1 {
            font-size: 2.2rem;
            font-weight: 900;
            text-shadow: 1px 1px 3px rgba(0,0,0,0.2);
        }

        h2 {
            font-size: 2rem;
            font-weight: 700;
            color: var(--color-dark-grey);
            margin-bottom: 1em;
        }

        h3 {
            font-size: 1.2rem;
            font-weight: 400;
            max-width: 800px;
            margin-left: auto;
            margin-right: auto;
        }

        h4 {
            font-size: 1rem;
            font-weight: 400;
        }

        .text-left { text-align: left; }
        .text-blue { color: var(--color-primary); }
        .text-bold-blue { color: var(--color-primary); font-weight: 700; text-align: center; }

        /* Section-specific Styles */
        .section {
            padding: 50px 0;
            border-bottom: 1px solid #e0e0e0;
        }
        .section:last-child {
            border-bottom: none;
        }

        /* Section A: Hero */
        .section-a {
            background: var(--gradient-hero);
            color: white;
            padding: 60px 20px;
        }

        /* Section B, C, F, G, H */
        .section-b, .section-c, .section-f, .section-g, .section-h {
            background-color: #ffffff;
        }

        /* Section D: Progress */
        .section-d {
            background-color: var(--bg-progress);
            color: var(--color-primary);
        }
        .section-d h2 { color: var(--color-primary); }

        /* Section E: Calculator */
        .section-e {
            background-color: var(--bg-calculator);
        }
        .section-e h2 { color: var(--color-secondary); }
        .section-e h3 { color: var(--color-secondary); }
        .calculator-wrapper {
            display: flex;
            justify-content: center;
            align-items: center;
            gap: 20px;
            flex-wrap: wrap;
            margin: 25px 0;
        }
        .input-group {
            display: flex;
            align-items: center;
            gap: 10px;
            background: white;
            padding: 12px 18px;
            border-radius: 8px;
            box-shadow: 0 4px 8px rgba(0,0,0,0.05);
        }
        .input-group i { color: var(--color-secondary); font-size: 1.2rem; }
        .input-group label { font-weight: 700; }
        .input-group input {
            border: 1px solid #ccc;
            border-radius: 4px;
            padding: 8px;
            width: 60px;
            text-align: center;
            font-size: 1rem;
        }
        .button-group {
            margin: 25px 0;
            display: flex;
            justify-content: center;
            gap: 15px;
            flex-wrap: wrap;
        }
        .button-group button {
            padding: 12px 28px;
            font-size: 1.1rem;
            font-family: 'Noto Sans TC', sans-serif;
            font-weight: 700;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            transition: all 0.3s ease;
            box-shadow: 0 4px 6px rgba(0,0,0,0.1);
        }
        .button-group button:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 12px rgba(0,0,0,0.15);
        }
        #calculate-btn { background-color: #8e44ad; color: white; }
        #select-all-btn { background-color: #27ae60; color: white; }
        #deselect-all-btn { background-color: #c0392b; color: white; }

        /* Section F: Category Summary */
        .category-summary-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
            gap: 20px;
            margin-bottom: 40px;
            text-align: left;
        }
        .category-card {
            background: #ffffff;
            border: 1px solid #eee;
            border-radius: 12px;
            padding: 20px;
            position: relative;
            overflow: hidden;
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }
        .category-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 20px rgba(0,0,0,0.08);
        }
        .category-card .icon {
            position: absolute;
            top: 20px;
            left: 20px;
            font-size: 1.8rem;
            color: #ccc;
        }
        .category-card-title {
            margin-top: 40px;
            font-weight: 700;
            font-size: 1.2rem;
        }
        .category-card-cost {
            text-align: right;
            font-size: 1.4rem;
            font-weight: 700;
            color: var(--color-primary);
            margin-top: 10px;
        }

        /* Pie Chart */
        .pie-chart-container {
            max-width: 450px;
            margin: 40px auto;
        }

        /* Section G: Item Cards */
        .item-cards-grid {
            display: grid;
            grid-template-columns: repeat(3, 1fr);
            gap: 25px;
            text-align: left;
        }
        .item-card {
            background: #ffffff;
            border: 2px solid var(--color-unchecked);
            border-radius: 12px;
            padding: 20px;
            cursor: pointer;
            position: relative;
            transition: transform 0.2s, box-shadow 0.2s, border-color 0.3s;
            display: flex;
            flex-direction: column;
            justify-content: space-between;
        }
        .item-card.selected {
            border: 3px solid var(--color-checked);
        }
        .item-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 15px rgba(0,0,0,0.1);
        }
        .item-card-category {
            font-size: 0.9rem;
            font-weight: 700;
            color: #777;
            margin-bottom: 10px;
        }
        .item-card-name {
            font-weight: 700;
            font-size: 1.15rem;
            margin-bottom: 15px;
            flex-grow: 1;
        }
        .item-card-footer {
            margin-top: 15px;
        }
        .item-card-price {
            font-weight: 700;
            color: var(--color-primary);
            font-size: 1.2rem;
            margin-bottom: 10px;
        }
        .quantity-wrapper {
            display: flex;
            align-items: center;
            gap: 10px;
            margin-top: 10px;
        }
        .quantity-wrapper label { font-size: 0.9rem; }
        .quantity-wrapper input {
            width: 50px;
            padding: 5px;
            text-align: center;
            border: 1px solid #ccc;
            border-radius: 4px;
        }
        .checkbox-wrapper {
            margin-top: 15px;
            display: flex;
            align-items: center;
            gap: 10px;
            font-weight: 700;
        }
        .checkbox-wrapper input[type="checkbox"] {
            width: 20px;
            height: 20px;
            cursor: pointer;
        }

        .item-card .tooltip {
            visibility: hidden;
            width: 240px;
            background-color: rgba(0,0,0,0.8);
            color: #fff;
            text-align: center;
            border-radius: 6px;
            padding: 10px;
            position: absolute;
            z-index: 10;
            bottom: 105%;
            left: 50%;
            margin-left: -120px;
            opacity: 0;
            transition: opacity 0.3s;
            pointer-events: none;
        }
        .item-card .tooltip::after {
            content: "";
            position: absolute;
            top: 100%;
            left: 50%;
            margin-left: -5px;
            border-width: 5px;
            border-style: solid;
            border-color: rgba(0,0,0,0.8) transparent transparent transparent;
        }
        .item-card:hover .tooltip {
            visibility: visible;
            opacity: 1;
        }

        /* Responsive Design */
        @media (max-width: 1024px) {
            .item-cards-grid {
                grid-template-columns: repeat(2, 1fr);
            }
        }

        @media (max-width: 768px) {
            .container { padding: 20px; }
            h1 { font-size: 1.8rem; }
            h2 { font-size: 1.6rem; }
            h3 { font-size: 1.1rem; }
            .item-cards-grid { grid-template-columns: 1fr; }
            .category-summary-grid { grid-template-columns: 1fr; }
        }
    </style>
</head>
<body>

    <!-- Section A: 網頁主題句 -->
    <section class="section section-a">
        <div class="container">
            <h1>若飛機未來可能下墜，你要等別人遞給你降落傘？還是現在，就為自己準備一把？！</h1>
            <h1>一起準備防災包表達對家庭的愛！</h1>
        </div>
    </section>

    <!-- Section B: 網頁引言句 -->
    <section class="section section-b">
        <div class="container">
            <h2>引言</h2>
            <h3 class="text-left">「在戰爭與屈辱面前，你選擇了屈辱！可是，屈辱過後，你仍得面對戰爭！」</h3>
            <h3 class="text-left">— 已故英國首相，溫斯頓·丘吉爾(1938)</h3>
            <br>
            <h3 class="text-left">台灣正處在一個平行時空的分歧點。</h3>
            <h3 class="text-left">如果你知道，關鍵日的一個選擇，可能導致兩條完全不同的時空線──自由 VS 極權</h3>
            <h3 class="text-left">你會選擇提早準備，還是袖手旁觀繼續等待？</h3>
            <h3 class="text-left">作者近兩個月進行了一項「希望永遠用不到，但一旦需要就關乎生死」的任務：準備家庭災難包。</h3>
            <h3 class="text-left">準備這些真的很耗神、耗錢也耗時間。但換來的，是內心的安定感，還有當意外發生時，不至於只能手忙腳亂搶物資，避免等別人告訴你怎麼辦的那種被動感。</h3>
            <h3 class="text-left">颱風、地震、疫情，大家都會做一點準備，但面對更極端且複合式的風險，反而會因為太沉重，而選擇壓抑與忽略不安。</h3>
            <h3 class="text-left">但事實上，戰爭就是最高強度的綜合災難：水電中斷、物資短缺、資訊封鎖、網路癱瘓、醫療癱瘓、交通停擺、財產喪失、人身威脅，以及各種型態的暴力與侵害。</h3>
            <h3 class="text-left">不管你的身分與價值觀，這些災難都不會先敲門詢問你的同意：「Hey, bro! Do you want a battle?」</h3>
            <h3 class="text-left">我希望自己能做決定，而不是在別人決定後被迫接受結果。生存與尊嚴，也應該是我們主動做出的選擇，而不是寄託敵人的仁慈與善意，或讓他人替我們規劃。</h3>
        </div>
    </section>

    <!-- Section C: 防災包建議清單 -->
    <section class="section section-c">
        <div class="container">
            <h2>防災包建議清單</h2>
            <h3 class="text-blue">「準備不完全，也勝過完全不準備」— 這一份我為家庭準備的防災包清單，希望能為您提供一些準備時的參考。</h3>
            <h3 class="text-left">依照人體生存所需的優先順序排列，從1~9依序排列與分類：依序是："1濾水與儲水", "2長效期糧食", "3衛生與醫療", "4保暖與衣物", "5能源與燃料", "6通訊", "7防火逃生", "8基礎綜合", "9其他"。</h3>
        </div>
    </section>

    <!-- Section D: 我的家庭防災包選擇進度 -->
    <section class="section section-d">
        <div class="container text-left">
            <h2>我的家庭防災包選擇進度</h2>
            <h3>您已勾選 <span id="selected-count">0</span> 個品項</h3>
            <h3>已勾選品項預估總金額：NT$ <span id="total-cost">0</span></h3>
            <h4>繼續努力，一起讓您的家庭更安全！</h4>
        </div>
    </section>

    <!-- Section E: 依人數與天數預估數量 -->
    <section class="section section-e">
        <div class="container">
            <h2>依人數與天數預估數量</h2>
            <h3 class="text-left">請輸入家庭成員人數與預估儲備天數，系統將自動計算「濾水與儲水」及「長效期糧食」的建議數量。</h3>
            <h3 class="text-left">注意：其他類別品項數量需手動調整。</h3>
            <div class="calculator-wrapper">
                <div class="input-group">
                    <i class="fas fa-user"></i>
                    <label for="adults">大人人數</label>
                    <input type="number" id="adults" value="2" min="0">
                </div>
                <div class="input-group">
                    <i class="fas fa-child"></i>
                    <label for="children">小孩人數</label>
                    <input type="number" id="children" value="1" min="0">
                </div>
                <div class="input-group">
                    <i class="fas fa-calendar-alt"></i>
                    <label for="days">預估儲備天數</label>
                    <input type="number" id="days" value="14" min="1">
                </div>
            </div>
            <div class="button-group">
                <button id="calculate-btn">計算建議數量</button>
                <button id="select-all-btn">快速全部勾選</button>
                <button id="deselect-all-btn">快速全部取消</button>
            </div>
            <h4 class="text-left" style="max-width: 800px; margin: 1em auto;">預設建議值：成人以70公斤男性計算，每日熱量需求2,500大卡，飲水2.5公升；小孩以成人的50%需求量做計算。</h4>
        </div>
    </section>

    <!-- Section F: 各類別金額小計 -->
    <section class="section section-f">
        <div class="container">
            <h2>類別金額小計</h2>
            <div id="category-summary" class="category-summary-grid">
                <!-- Category cards will be inserted here by JavaScript -->
            </div>
            <div class="pie-chart-container">
                <canvas id="category-pie-chart"></canvas>
            </div>
        </div>
    </section>

    <!-- Section G: 詳細品項與單價數量 -->
    <section class="section section-g">
        <div class="container">
            <h2>詳細品項與單價數量</h2>
            <h3 class="text-left" style="max-width: 1200px; margin: 1em auto;">詳細資訊可以下載Excel原始檔案。(此處您可以放上檔案的下載連結)</h3>
            <div id="item-cards-container" class="item-cards-grid">
                <!-- Item cards will be inserted here by JavaScript -->
            </div>
        </div>
    </section>
    
    <!-- Section H: 結語 -->
    <section class="section section-h">
        <div class="container">
            <h2>結語</h2>
            <h3 class="text-left">如果你也曾經覺得焦慮，不妨貼近「第一性原理」來思考：</h3>
            <h3 class="text-left">你真正的焦慮與擔心是什麼？（生命財產？生活方式？下一代？…）</h3>
            <h3 class="text-left">讓你不安的因素來自哪裡？（人？事？物？…）</h3>
            <h3 class="text-left">你現在能做的有什麼？（強化家庭韌性準備？出國移民？祈禱？…）</h3>
            <h3 class="text-left">這些問題的答案，每個人應該不會一樣，但能幫助我們釐清──什麼是讓你焦慮的源頭？什麼行動能讓你感到安心？</h3>
            <br>
            <h3 class="text-bold-blue text-left" style="max-width: 800px; margin: 1em auto;">「行動起來，就是選擇不依賴敵人的善意替你決定未來！」</h3>
            <br>
            <h3 class="text-bold-blue">🔁 若您覺得這篇內容對您或您的家人有所幫助，歡迎分享或轉貼。</h3>
            <h3 class="text-bold-blue">🧩 國家的韌性，從每個家庭的準備開始。</h3>
            <h3 class="text-bold-blue">✨ 願民主與繁榮與我們同在──直到永遠！</h3>
        </div>
    </section>
    
    <script>
        document.addEventListener('DOMContentLoaded', function () {

            // ===================================================================================
            // DATA SOURCE
            // 從您的Excel檔案轉換而來的數據
            // ===================================================================================
            const PRODUCT_DATA = [
                { "category": "1濾水與儲水", "name": "日本MochiGoo PET材質可折疊水壺袋(8公升容量)", "notes": "PET材質水溫建議不超過60攝氏度", "price": 146.5, "link": "https://tw.shp.ee/5nuoRdJ", "food_supply_days": 0, "water_supply_days": 3.2 },
                { "category": "1濾水與儲水", "name": "美國KATADYN MICROPUR MP1過濾隱孢蟲藥錠(一盒30顆)", "notes": "每盒30顆，每顆可處理1公升汙水，需靜置1~4小時", "price": 637.5, "link": "https://tw.shp.ee/...", "food_supply_days": 0, "water_supply_days": 12.0 },
                { "category": "1濾水與儲水", "name": "美國Sawyer Squeeze隨身濾水器", "notes": "可過濾37萬公升的水，孔徑0.1微米，可直接飲用", "price": 1480.0, "link": "https://tw.shp.ee/...", "food_supply_days": 0, "water_supply_days": 148000.0 },
                { "category": "2長效期糧食", "name": "美軍MREレーション Field Ration B", "notes": "每份約1200大卡，需搭配飲用水加熱。有多種菜單可選。", "price": 350.0, "link": "https://example.com/mre", "food_supply_days": 0.48, "water_supply_days": 0 },
                { "category": "2長效期糧食", "name": "台灣製-聖光牌-能量棒(20入/盒)", "notes": "每條120大卡，適合快速補充能量", "price": 250.0, "link": "https://example.com/energybar", "food_supply_days": 0.96, "water_supply_days": 0 },
                { "category": "3衛生與醫療", "name": "以色列軍用醫療繃帶(4吋)", "notes": "真空包裝，多功能合一，可用於止血、包紮", "price": 200.0, "link": "https://example.com/bandage", "food_supply_days": 0, "water_supply_days": 0 },
                { "category": "4保暖與衣物", "name": "美國SOL-Emergency Bivvy緊急露宿袋", "notes": "可反射90%體溫，防水防風，輕巧好攜帶", "price": 680.0, "link": "https://example.com/bivvy", "food_supply_days": 0, "water_supply_days": 0 },
                { "category": "5能源與燃料", "name": "日本Panasonic EVOLTA長效鹼性電池", "notes": "包含：3號AA與4號AAA電池", "price": 807.0, "link": "https://tw.shp.ee/vbbukfA", "food_supply_days": 0, "water_supply_days": 0 },
                { "category": "5能源與燃料", "name": "美國CampMaid固體燃料塊(12顆裝)", "notes": "推薦搭配可放置固體或液態燃料的美國Vargo鈦金屬小爐具", "price": 148.8, "link": "https://tw.shp.ee/qVHMQgy", "food_supply_days": 0, "water_supply_days": 0 },
                { "category": "6通訊", "name": "手搖發電收音機/手電筒", "notes": "AM/FM頻道，可手搖或太陽能充電，並可為手機應急充電", "price": 500.0, "link": "https://example.com/radio", "food_supply_days": 0, "water_supply_days": 0 },
                { "category": "7防火逃生", "name": "消防署認證-家用滅火器", "notes": "適用於A、B、C類火災，應放置於易取得處", "price": 650.0, "link": "https://example.com/extinguisher", "food_supply_days": 0, "water_supply_days": 0 },
                { "category": "8基礎綜合", "name": "多功能工具鉗", "notes": "包含鉗子、刀子、螺絲起子等多種工具", "price": 900.0, "link": "https://example.com/multitool", "food_supply_days": 0, "water_supply_days": 0 },
                { "category": "9其他", "name": "台灣製3M舒適系列護耳罩", "notes": "在吵雜環境中保護聽力，提供安靜的休息環境。", "price": 450.0, "link": "https://example.com/earmuffs", "food_supply_days": 0, "water_supply_days": 0 }
            ];
            // ===================================================================================
            // END OF DATA SOURCE
            // ===================================================================================

            const itemsContainer = document.getElementById('item-cards-container');
            const categorySummaryContainer = document.getElementById('category-summary');
            const pieChartCanvas = document.getElementById('category-pie-chart').getContext('2d');

            const selectedCountEl = document.getElementById('selected-count');
            const totalCostEl = document.getElementById('total-cost');
            
            const adultsInput = document.getElementById('adults');
            const childrenInput = document.getElementById('children');
            const daysInput = document.getElementById('days');

            const calculateBtn = document.getElementById('calculate-btn');
            const selectAllBtn = document.getElementById('select-all-btn');
            const deselectAllBtn = document.getElementById('deselect-all-btn');

            let chart;
            const categoryIcons = {
                "1濾水與儲水": "fas fa-tint",
                "2長效期糧食": "fas fa-utensils",
                "3衛生與醫療": "fas fa-first-aid",
                "4保暖與衣物": "fas fa-tshirt",
                "5能源與燃料": "fas fa-bolt",
                "6通訊": "fas fa-satellite-dish",
                "7防火逃生": "fas fa-fire-extinguisher",
                "8基礎綜合": "fas fa-tools",
                "9其他": "fas fa-ellipsis-h",
            };

            function initializeCards() {
                itemsContainer.innerHTML = '';
                PRODUCT_DATA.forEach((item, index) => {
                    item.id = `item-${index}`;
                    const card = document.createElement('div');
                    card.className = 'item-card';
                    card.id = item.id;
                    card.dataset.link = item.link;

                    card.innerHTML = `
                        <div>
                            ${item.notes ? `<span class="tooltip">${item.notes}</span>` : ''}
                            <div class="item-card-category">${item.category}</div>
                            <div class="item-card-name">${item.name}</div>
                        </div>
                        <div class="item-card-footer">
                            <div class="item-card-price">NT$ ${item.price.toLocaleString()}</div>
                            <div class="quantity-wrapper">
                                <label for="qty-${index}">數量:</label>
                                <input type="number" id="qty-${index}" class="quantity-input" value="1" min="0" data-index="${index}">
                            </div>
                            <div class="checkbox-wrapper">
                                <input type="checkbox" id="check-${index}" class="item-checkbox" data-index="${index}">
                                <label for="check-${index}">納入清單</label>
                            </div>
                        </div>
                    `;
                    itemsContainer.appendChild(card);
                });
            }

            function renderCategorySummary() {
                const categories = [...new Set(PRODUCT_DATA.map(p => p.category))].sort();
                categorySummaryContainer.innerHTML = '';
                categories.forEach(cat => {
                    const card = document.createElement('div');
                    card.className = 'category-card';
                    card.innerHTML = `
                        <i class="icon ${categoryIcons[cat] || 'fas fa-question-circle'}"></i>
                        <div class="category-card-title">${cat}</div>
                        <div class="category-card-cost" id="cat-cost-${cat.replace(/[^a-zA-Z0-9]/g, '-')}">NT$ 0</div>
                    `;
                    categorySummaryContainer.appendChild(card);
                });
            }

            function updateSummaries() {
                let selectedCount = 0;
                let totalCost = 0;
                const categoryTotals = {};

                [...new Set(PRODUCT_DATA.map(p => p.category))].forEach(cat => {
                    categoryTotals[cat] = 0;
                });

                document.querySelectorAll('.item-checkbox').forEach((checkbox, index) => {
                    const card = document.getElementById(`item-${index}`);
                    if (checkbox.checked) {
                        card.classList.add('selected');
                        const quantity = parseInt(document.getElementById(`qty-${index}`).value) || 0;
                        const item = PRODUCT_DATA[index];
                        
                        selectedCount++;
                        totalCost += item.price * quantity;
                        if (categoryTotals[item.category] !== undefined) {
                            categoryTotals[item.category] += item.price * quantity;
                        }
                    } else {
                        card.classList.remove('selected');
                    }
                });

                selectedCountEl.textContent = selectedCount;
                totalCostEl.textContent = Math.round(totalCost).toLocaleString();

                for (const [category, cost] of Object.entries(categoryTotals)) {
                    const costEl = document.getElementById(`cat-cost-${category.replace(/[^a-zA-Z0-9]/g, '-')}`);
                    if(costEl) {
                        costEl.textContent = `NT$ ${Math.round(cost).toLocaleString()}`;
                    }
                }
                
                updatePieChart(categoryTotals);
            }

            function updatePieChart(categoryTotals) {
                const sortedCategories = Object.entries(categoryTotals)
                    .filter(([, cost]) => cost > 0)
                    .sort(([, a], [, b]) => b - a);

                const labels = sortedCategories.map(item => item[0]);
                const data = sortedCategories.map(item => item[1]);
                const total = data.reduce((acc, val) => acc + val, 0);

                const backgroundColors = [
                    '#4e73df', '#1cc88a', '#36b9cc', '#f6c23e', '#e74a3b',
                    '#858796', '#6f42c1', '#fd7e14', '#20c9a6'
                ];

                if (chart) {
                    chart.destroy();
                }

                chart = new Chart(pieChartCanvas, {
                    type: 'pie',
                    data: {
                        labels: labels,
                        datasets: [{
                            data: data,
                            backgroundColor: backgroundColors,
                            hoverOffset: 4,
                            borderWidth: 1
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: true,
                        plugins: {
                            legend: { display: false },
                            tooltip: {
                                callbacks: {
                                    label: function(context) {
                                        const label = context.label || '';
                                        const value = context.raw || 0;
                                        const percentage = total > 0 ? ((value / total) * 100).toFixed(0) : 0;
                                        return [
                                            `${label}`,
                                            `金額: NT$ ${Math.round(value).toLocaleString()}`,
                                            `佔比: ${percentage}%`
                                        ];
                                    }
                                },
                                bodyFont: { size: 14 },
                                padding: 10,
                                boxPadding: 5,
                            }
                        }
                    }
                });
            }

            function handleCardClick(e) {
                const card = e.target.closest('.item-card');
                if (!card) return;

                if(e.target.matches('input, label, .quantity-wrapper, .quantity-wrapper *')) {
                    return;
                }

                const link = card.dataset.link;
                if (link && link !== 'https://example.com/...') {
                    const isMobile = window.innerWidth <= 768;
                    if (isMobile) {
                        if (confirm('您即將離開本頁前往外部網站，是否繼續？')) {
                            window.open(link, '_blank', 'noopener,noreferrer');
                        }
                    } else {
                        window.open(link, '_blank', 'noopener,noreferrer');
                    }
                }
            }

            function calculateQuantities() {
                const adults = parseInt(adultsInput.value) || 0;
                const children = parseInt(childrenInput.value) || 0;
                const days = parseInt(daysInput.value) || 0;
                
                if (days <= 0) {
                    alert('儲備天數必須大於 0');
                    return;
                }

                const totalWaterNeedPerDay = (adults * 2.5) + (children * 2.5 * 0.5);
                const totalFoodNeedPerDay = (adults * 2500) + (children * 2500 * 0.5);
                
                PRODUCT_DATA.forEach((item, index) => {
                    const quantityInput = document.getElementById(`qty-${index}`);
                    let requiredUnits = 0;
                    
                    if (item.category === "1濾水與儲水" && item.water_supply_days > 0) {
                         const waterSupplyPerUnitInLiters = item.water_supply_days * 2.5;
                         const totalLitersNeeded = totalWaterNeedPerDay * days;
                         if (waterSupplyPerUnitInLiters > 0) {
                            requiredUnits = Math.ceil(totalLitersNeeded / waterSupplyPerUnitInLiters);
                         }
                    } else if (item.category === "2長效期糧食" && item.food_supply_days > 0) {
                         const foodSupplyPerUnitInKcal = item.food_supply_days * 2500;
                         const totalKcalNeeded = totalFoodNeedPerDay * days;
                         if (foodSupplyPerUnitInKcal > 0) {
                            requiredUnits = Math.ceil(totalKcalNeeded / foodSupplyPerUnitInKcal);
                         }
                    }
                    
                    if (requiredUnits > 0) {
                        quantityInput.value = requiredUnits;
                    }
                });
                updateSummaries();
            }
            
            // Event Listeners
            itemsContainer.addEventListener('change', (e) => {
                if (e.target.matches('.item-checkbox, .quantity-input')) {
                    updateSummaries();
                }
            });
            
            itemsContainer.addEventListener('click', handleCardClick);

            calculateBtn.addEventListener('click', calculateQuantities);

            selectAllBtn.addEventListener('click', () => {
                document.querySelectorAll('.item-checkbox').forEach(cb => cb.checked = true);
                updateSummaries();
            });

            deselectAllBtn.addEventListener('click', () => {
                document.querySelectorAll('.item-checkbox').forEach(cb => cb.checked = false);
                updateSummaries();
            });

            // Initial setup
            initializeCards();
            renderCategorySummary();
            updateSummaries();
        });
    </script>
</body>
</html>
